##############################################
# Application configuration
# act-1.8.8-RC8
##############################################

# When `api_doc` is enabled it can navigate to
# http://localhost:5460/~/apidoc
# for API Document.
# 
# API doc is enabled by default
#
# uncomment to disable API doc
#api_doc=false

# When `api_doc.built_in.hide` is enabled the API document 
# will not display built-in endpoints, e.g. 
# `/~/info`
# 
# built-in endpoints is visible in API doc by default
#
# uncomment to hide built-in endpoints in API doc
#api_doc.built_in.hide=true

# `basic_authentication` is not used by actframework
# core, however plugins like `act-aaa-plugin` use
# this configuration to check if HTTP basic 
# authentication is allowed.
# 
# basic authentication is disabled by default
#
# uncomment to enable basic authentication
#basic_authentication=true

# When `built_in_req_handler` is disabled it will
# not be able to access framework built-in endpoints
# including `/~/info`, `/~/version` etc.
# However the following built-in endpoints is still 
# available:
# * GET /~/job/{id}/progress - required by runtime application
# * GET /~/api/book/** - only available in dev mode
# 
# built-in endpoints is enabled by default
#
# uncomment to disable built endpoints
#built_in_req_handler=false

# Configure the cache implementation used by ActFramework.
# The cache class specified must implement 
# `org.osgl.cache.CacheServiceProvider` interface.
# 
# If not specified cache implementation is determined by 
# osgl-cache library automatically depending on the 
# libraries available in the following order:
# 1. Memcached service
# 2. EhCache service
# 3. OSGL implemented Simple Cache service based on concurrent hash map
#
# uncomment to set your own cache implementation
#cache.impl=

# By default @CacheFor annotation is not effective in `dev` mode.
# the `cacheFor.dev` configuration can be used to turn on
# @CacheFor in `dev` mode.
#
# uncomment to enable @CacheFor annotation in `dev` mode
#cacheFor.dev=true

# CLI service listens to local ip addresses to provide telent 
# access for command line access to the running app.
# 
# CLI service is enabled by default
#
# uncomment to disable CLI service
#cli=false

# By default CLI port is `5461`
#
# uncomment to set CLI port
#cli.port=

# `cli.page.size.json` specifies the number of records to display
# per page for CLI JSON view.
#
# Default CLI JSON view page size is 10 records
#
# uncomment to set CLI JSON view page size
#cli.page.size.json=

# `cli.page.size.table` specifies the number of records to display
# per page for CLI tabular view.
#
# Default CLI table view page size is 22 records
#
# uncomment to set CLI table view page size
#cli.page.size.table=

# `cli.session.ttl` specifies the number of seconds a CLI
# session will be terminated without interaction.
#
# The default CLI session ttl is 300 seconds, i.e. 5 minutes
#
# uncomment to set CLI session ttl
#cli.session.ttl

# `cli.session.max.int` specifies the maximum concurrent CLI session
#
# The default limits is 3
#
# uncomment to set CLI session max
#cli.session.max.int

# `cookie.prefix` specifies the session/flash cookie prefix.
# 
# The default cookie prefix is the `shortId` of the application.
#
# uncomment to customize session/flash cookie prefix.
#cookie.prefix=

# When `cors` is enabled ActFramework will automatically populate the
# CORS relevant headers in HTTP response.
# 
# When `cors` is disabled all other `cors` relevant settings is not effective.
#
# By default `CORS` is disabled
# 
# uncomment to enable CORS support
#cors=true


# `cors.origin` set the `Access-Control-Allow-Origin` response header.
#
# Default CORS origin header value is `*`
#cors.origin=

# `cors.headers` set the `Access-Control-Expose-Headers` response header.
#
# Default value is `Content-Type, X-HTTP-Method-Override`
#cors.headers=

# `cors.headers.expose` set the `Access-Control-Expose-Headers` response header.
# 
# Default value is empty.
#cors.headers.expose=

# `cors.headers.allowed` set the `Access-Control-Allow-Headers` response header.
# 
# Default value is empty.
#cors.headers.allowed=

# `cors.max_age` set the `Access-Control-Max-Age` response header
#
# Default value is `30*60` i.e. 30 minutes
#cors.max_age

# `cors.allow_credentials.enabled` set the `Access-Control-Allow-Credential` response header
#
# By default this setting is disabled
#
# Uncomment the set `Access-Control-Allow-Credential` to `true`
#cors.allow_credentials=true

# If `content_suffix.aware` is enabled the framework adjust Request `Accept`
# header based on URL suffix.
# 
# E.g. `/customer/123/json` will match the route `/customer/123`
# and set the `Accept` header of the incoming request to `application/json`
#
# By default `content_suffix.aware` is disabled.
#
# Uncomment to enable `content_suffix.aware.enabled`
#content_suffix.aware.enabled=true

# `csp` set the `Content-Security-Policy` response header value.
# 
# By default `csp` is not set.
#csp=

# `csrf` turn on/off the CSRF protection.
# See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)
# 
# By default `csrf` protection is disabled
#
# uncomment to turn on CSRF protection.
#csrf=true

# `csrf.param_name` specifies the http request param name
# used to convey the csrf token.
#
# Default value: `__csrf__`
#csrf.param_name

# `csrf.header.name` specifies name of the http request header
# used to convey the csrf token sent from AJAX client.
#
# Default value: `X-Xsrf-Token` 
#csrf.header_name=

# `csrf.cookie_name` specify the name of the cookie used to 
# convey the csrf token generated on the server for the first GET
# request coming from a client.
#
# Default value: `XSRF-TOKEN`
#csrf.cookie_name

# `csrf.protector` specifies the implementation of `act.security.CSRFProtector`.
#
# Default protector implementation is `HMAC`
#
# uncomment to set csrf protector implementation
#csrf.protector=RANDOM|className

# `db.seq_gen` specifies the implementation of `act.db.util._SequenceNumberGenerator`
# 
# Default value is `null` or an implementation specified by db plugin
#db.seq_gen=

# `dsp.token` specifies the name of "double submission protect token"
# 
# Default value: `act_dsp_token`
#dsp.token=

# `enum.resolving.exact_match` specify whether it shall resolve enum value
# in exact matching way or Keyword based variation way.
#
# Keyword based variation matching explain:
#
# Suppose we have an enum defination: `enum TestEnum {FOO_BAR}
# All the following string variations can be resolved to `TestEnum.FOO_BAR`:
#
#   * FOO_BAR
#   * Foo-Bar
#   * Foo.Bar
#   * foo-bar
#   * foo_bar
#   * FooBar
#   * fooBar
#
# Default value is `false` meaning enum type value resolving is 
# non-exact matching
#
# uncomment to make Enum type parameter resolving be exact matching
#enum.resolving.exact_match=false

# `fmt.date` specifies the pattern for Date type value resolving
# 
# The setting can be any one of
# - long
# - medium
# - short
# - custom pattern, e.g. `EEE yyyy MMM dd`
#
# Note custom pattern shall not contain any symbol for time, e.g. `H` or `m`
# Default value: `medium`
#fmt.date=

# `fmt.<locale>.date` specifies the pattern for Date type for specific locale
#
# It can specify date formats for multiple locales
# 
# Default value: `medium`
# see also: `fmt.date`
#fmt.zh_cn.date=yyyy年MM月dd日


# `fmt.data_time` specifies the pattern for DataTime type value resolving.
# 
# The setting can be any one of
# - long
# - medium
# - short
# - custom pattern, e.g. `EEE yyyy MMM dd`
#
# Default value: `medium`
#fmt.date_time=

# `fmt.<locale>.date_time` specifies the pattern for DateTime type for specific locale
#
# It can specify date_time formats for multiple locales
# 
# Default value: `medium`
# see also: `fmt.date_time`
#fmt.zh_cn.date_time=yyyy年MM月dd日 HH:mm

# `fmt.time` specifies the pattern for Time type value resolving
# 
# The setting can be any one of
# - long
# - medium
# - short
# - custom pattern, e.g. `HHmmss`
#
# Note custom pattern shall not contain any symbol for date, e.g. `y` or `M`
# Default value: `medium`
#fmt.time=

# `fmt.<locale>.time` specifies the pattern for Time type for specific locale.
#
# It can specify time formats for multiple locales
# 
# Default value: `medium`
# see also: `fmt.time`
#fmt.zh_cn.time=HH:mm

# `handler.csrf_check_failure` specifies the implemetation of `MissingAuthenticationHandler`
# to be called when CSRF checking failed.
#
# Default value is the setting of `handler.missing_authentication`
#handler.csrf_check_failure=

# `handler.missing_authentication` specifies the implemetation of `MissingAuthenticationHandler`
# to be called when authentication is failed on an non-AJAX request.
#
# Default value is `act.util.RedirectToLoginUrl` if login URL is in the route table.
# otherwise it is `act.util.ReturnUnauthorized`
#handler.missing_authentication=

# `handler.missing_authentication` specifies the implemetation of `MissingAuthenticationHandler`
# to be called when authentication is failed on an AJAX request.
#
# Default value is the setting of `handler.missing_authentication`
#handler.missing_authentication.ajax=

# `handler.unknown_http_method` specifies the handler implementation to be called
# when ActFramework found the HTTP method of an incoming request is not supported
# 
# Default value is `UnknownHttpMethodProcessor.METHOD_NOT_ALLOWED`, i.e. 
# respond `405 Method Not Allowed` response.
#handler.unknown_http_method=

# `act.header.overwrite` turn on/off HTTP HEADER overwrite.
#
# Once this config is turned on, then it can overwrite header
# with HTTP Query parameter or HTTP post form field. The naming
# convention of the param/field is:
#
# ```
# act_header_<header_name_in_lowercase_and_underscore>
# ```
#
# For example, if it needs to overwrite `Content-Type`, use
# `act_header_content_type` as the query parameter name.
#
# Default value: `false`
#header.overwrite=true


# `header.session.expiration` specifies name of the HTTP response header to be 
# used to convey the JWT/session cookie expiration time.
# 
# Default value is `Act-Session-Expires`
#header.session.expiration=

# `host` specifies the hostname of the application.
#
# This setting is often used to concatentate full URL including host
# in email template.
#
# Default value: `localhost`
#host=

# `http.external_server` specify if the app is running behind a frontend
# http server, e.g. nginx.
#
# Default value: `true` when running in `prod` mode or `false` when running in `dev` mode
#http.external_server=true|false

# `http.params.max` specifies the maximum number of http parameters.
#
# This setting can be to prevent the hash collision DOS attack.
#
# Default value: 128
#http.params.max=

# `http.port` specifies the default HTTP port number
#
# Default value: 5460
http.port=3000

# `http.port.external` specifies the default HTTP port number of
# frontend HTTP server (if exists).
#
# Default value: 80
#http.port.external=

# `http.port.external.secure` specifies the default HTTPS port number of
# the frontend HTTP server (if exists)
#
# Default value: 443
#http.port.external.secure=

# `http.secure` specifies whether the default http port is running in
# an secure HTTP channel
#
# Default value: `true` when running in `prod` mode or `false` in `dev` mode
#http.secure=true|false

# `https.port` specify the https port - only effect 
# when `ssl` is enabled.
#
# Default value: `5443`
#https.port=

# `i18n` turn on/off i18n support in ActFramework.
# 
# Default value: false
#i18n=true|false

# `i18n.locale.param_name` specifies the param name to set client locale 
# in http request
# 
# Default value: `act_locale`
#i18n.locale.param_name=

# `i18n.locale.cookie_name` specifies the name for the locale cookie
# 
# Default value: `act_locale`
#i18n.locale.cookie_name=

# `idgen.node_id.provider` specifies the implementation of 
# `act.util.IdGenerator.NodeIdProvider` which is called when generating the 
# CUID (Custer Unique Identifier)
# 
# Default value: `act.util.IdGenerator.NodeIdProvider.IpProvider`
#idgen.node_id.provider=

# `idgen.node_id.effective_ip_bytes.size` specifies how many bytes in the ip address
# will be used to calculate node ID. Usually in a cluster environment, the ip address will
# be different at only (last) one byte or (last) two bytes, in which case it could set this
# configuration to `1` or `2`. When the configuration is set to `4` then  it means all 4 IP 
# bytes will be used to calculate the node ID
#
# Default value: 4
#idgen.node_id.effective_ip_bytes.size=1|2|3|4

# `idgen.start_id.provider` specifies the `act.util.IdGenerator.StartIdProvider`
# implementation which is called when generating the CUID
# 
# Default value: `act.util.IdGenerator.StartIdProvider.DefaultStartIdProvider`
# which read/write the file specified by `idgen.start_id.file` setting in 
# the project dir.
#idgen.start_id.provider=

# `idgen.start_id.file` specifies the start id persistent file.
# This setting is used by `act.util.IdGenerator.StartIdProvider.DefaultStartIdProvider`
# 
# Default value: `.act.id-app`
#idgen.start_id.file=

# `idgen.seq_id.provider` specifies the `act.util.IdGenerator.SequenceProvider`
# implementation which is called when generating the CUID.
#
# Default value: `act.util.IdGenerator.SequenceProvider.AtomicLongSeq`
#idgen.seq_id.provider=

# `idgen.encoder` specifies the `act.util.IdGenerator.LongEncoder` implementation
# which is called when generating the CUID.
#
# Default value: `act.util.IdGenerator.SafeLongEncoder` which generates URL 
# safe and slighty longer string for long value encoding.
#idgen.encoder=act.util.IdGenerator.SafeLongEncoder|act.util.IdGenerator.UnsafeLongEncoder

# `job.pool.size` specifies the maximum number of threads
# can exists in the application's job manager's thread pool
#
# Default value: 10
#job.pool.size=

# `jwt` enable/disable JWT support.
# This is actually a combination of the following settings:
# * session.codec=act.session.JsonWebTokenSessionCodec
# * session.header.payload.prefix="Bearer " # note the space after `Bearer`
# * session.header=Authorization
#jwt=true|false

# `jwt.algo` specifies the algorithm used to encrypt/decrypt JWT.
#
# Default value: SHA256
#jwt.algo=SHA256|SHA384|SHA512

# `jwt.issuer` specify `iss` payload of JWT
#
# Default value: the setting of `cookie.prefix`
#jwt.issuer=

# `locale` specifies the application default locale
#
# Default value: the result of calling `java.util.Locale#getDefault()`
#locale=

# `metric` turn on/off internal metrics.
#
# Default value: true
#metric=true|false

# `modules` declare additional app base (for multi-module maven projects)
#modules=

# `namedPorts` specifies a list of port names this
# application listen to. These are additional ports other than
# the default `http.port` setting.
#
# Default value: null
#namedPorts=admin:8888;ipc:8899;...

# `password.spec` specify default password spec which is used to
# validate user password.
#
# Default value:
# * dev mode: `a[3,]`, meaning require lower case letter and min length is 3 characters.
# * prod mode: `aA0[6,]`, meaning require lower case letter, uppercase letter, digit and min length is 6 characters.
#
# Developer can also specify a `Password.Validator` implementation
# class for this configuration, in which case, the framework will instantiate the user
# specified validator instead of `act.validation.PasswordSpec` as the default
# password validator.
#
#password.spec=

# `ping.path` specify the ping path.
# If this setting is specified, then when session resolving, system
# will check if the current URL matches the setting. If matched
# then session cookie expiration time will not be changed. Otherwise
# the expiration time will refresh
#
# Default value: `null`
#ping.path=

# `req.throttle` specifies the maximum number of requests
# that can be handled per second from the same ip address
# when `@Throttled` annotation is presented without `value`
# specified on a request handler method.
# 
# Default value: 2
#req.throttle=

# `req.throttle.expire.scale` turn on/off request throttle
# expiry time increment.
#
# Default value: `false`
#req.throttle.expire.scale=true|false

# `render.json.content_type.ie` specify whether the content type
# of JSON response on request initiated from an IE browser.
#
# Note early IE browser does not support the `application/json` content type.
# 
# Default value: `null` 
#render.json.content_type.ie=

# `resolver.template_path` specifies the class that extends
# `TemplatePathResolver`. Application developer could use this 
# configuration to add some flexibility to
# template path resolving logic, e.g. different home 
# for different locale or different home for different device 
# type etc
#
# Defautl value: `TemplatePathResolver`
#resolver.template_path

# `resource.preload.size.limit` Specifies the maximum number of bytes of 
# a resource that can be preload into memory. Specify the setting to
# `0` or negative value disable resource preload feature.
# 
# Default value: `1024 * 10`, i.e. 10KB
#resource.preload.size.limit=

# `scan_package` specify the app package in which all classes is subject
# to bytecode processing, e.g enhancement and injection.
# 
# By default ActFramework will infer the scan package
# from the app entry class which contains the main method
# starting act.
#
#scan_package=

# `act.secret` Specifies the secret key the application used to do general
# encrypt/decrypt/sign etc
#
# Note application must set this configuration to secure the communication
act.secret=bNNRH1thcTqfvohQiZD2q8CF5rK1qXtlJR3jkqICEbOF49SsFGKfDMGkPc8HMEn5

# `secret.rotate` turn on app secret rotation for session/flash
# token signing and encrypt. This feature makes it even harder
# to crack as secret changes regularly.
#
# Default value: false
#secret.rotate=true|false

# `secret.rotate.period` set the secret rotate period in terms of minute.
#
# **Note** the number of minute must be a factor of 60. Any number that
# is not the factor of 60 then it will be up rounded:
#
# * 1 -> 1
# * 2 -> 2
# * 3 -> 4
# * 4 -> 4
# * 5 -> 5
# * 6 -> 6
# * 7 -> 10
# * 8 -> 10
# * 33 -> 30
# * 50 -> 60
#
# the rotation period less than hour will be count from the beginning of
# the current hour.
#
# If the number minutes exceeds 60, then it must be a factor of 60 * 24. Any
# number if not will be rounded:
#
# * 65 -> 60
# * 60 * 3 -> 60 * 3
# * 60 * 5 -> 60 * 6
# * 60 * 7 -> 60 * 6
# * 60 * 10 -> 60 * 12 (half day)
#
# if the number of minutes equals of exceeds 120, the rotation period will
# be counted from the beginning of the day.
#
# The maximum period is `60 * 24`, i.e. 24 hours. Any setting exceed that number
# will be cut off down to 24 hours.
#
# Default value: `30` minutes, ie. half an hour
#secret.rotate.period=

# `server.header` specifies the server header to be output to the response
#
# Default value: `act/${act-version}`
server.header=act

#`session.outputExpiration.enabled` turn on/off expiration output to
# response header.
#
# This setting only effective when it is using token to
# map session payload.
#
# Default value: `true`
#session.outputExpiration=true|false

# `session.ttl` specifies the session duration in seconds.
# If user failed to interact with server for amount of time that
# exceeds the setting then the session will be destroyed
#
# Default value: `60 * 30` i.e half an hour
#session.ttl=

# `session.persistent` specify whether the system
# should treat session cookie as persistent cookie. If this setting
# is enabled, then the user's session will not be destroyed after
# browser closed.
#
# Refer to http://en.wikipedia.org/wiki/HTTP_cookie#Persistent_cookie
#
# Default value: `false`
#session.persistent=true|false

# `session.encrypted` specify whether the system should
# encrypt the key/value pairs in the session cookie. Enable session
# encryption will greatly improve the security but with the cost
# of additional CPU usage and a little bit longer time on request
# processing.
#
# Default value: `false`
#session.encrypted=true|false

# `session.key.username` specifies the session key for username
# 
# Default value: `username`
#session.key.username=

# `session.mapper` specifies the implementation of `act.session.SessionMapper`
# Predefined session mappers:
# * `act.session.CookieSessionMapper` - map session data to session cookie
# * `act.session.HeaderTokenSessionMapper` - map session data to header token
# * `act.session.CookieAndHeaderSessionMapper` - map session data to both cookie and header
# 
# Default value:`act.session.CookieSessionMapper`
#session.mapper=

# `session.codec` specifies the implementation of `act.session.SessionCodec`
# Predefined session codec:
# * `act.session.DefaultSessionCodec`
# * `act.session.JsonWebTokenSessionCodec`
#
# Default value: `act.session.DefaultSessionCodec` when `jwt` is `false`
# or `act.session.JsonWebTokenSessionCodec` when `jwt` is `true`
#session.codec=

# `session.header` - specify the session header name.
# 
# Effective only when `act.session.SessionMapper` is `act.session.HeaderTokenSessionMapper`
# 
# Default value: X-Act-Session when `jwt` is `false`
# or `Authorization` when `jwt` is `true`
#session.header=

# `session.header.payload.prefix` set the session payload prefix, e.g. `Bearer `
#
# Default value: `null` when `jwt` is `false`
# or `Bearer ` when `jwt` is `true`
#session.header.payload.prefix=

# `session.secure` specifies whether the session cookie should
# be set as secure. Enable secure session will cause session cookie only
# effective in https connection. Literally this will enforce the web site to run
# default by https.
#
# Default value: `true`
#
# **Note** when {@link Act Act server} is running in {@link Act.Mode#DEV mode}
# session http only will be disabled without regarding to the `session.secure.enabled`
# setting
#session.secure=true|false

# `source.version` specifies the java version
# of the src code. This configuration is used only
# in dev mode.
# 
# Default value: 1.7
#source.version=

# `ssl` turn on/off SSL support.
# 
# Default value: `false`
# 
# **Note** this is experimental feature
#ssl=true|false

# `target.version` specifies the java version of the compile 
# target code. This configuration is used only in dev mode.
#
# Default value: 1.7
#target.version=

# `template.home` specifies where the view templates resides.
# If not specified then will use the {@link View#name() view name
# in lower case} as the template home if that view is used.
#
# Default value: the result of `View.name()`
#template.home=

# `threadlocal_buf.limit` set the maximum buffer size of thread local instance
# of `org.osgl.util.S.Buffer` and `org.osgl.util.ByteArrayBuffer`. If the buffer
# size exceeds the limit, the thread local instance will be dropped and new 
# instance will be created as the thread local instance.
#
# Default value: 1024 * 8 (i.e. 8k)
#threadlocal_buf.limit=

# `trace.handler` turn on/off handle invocation calls.
#
# When this configuration is turned on, every call to the
# action handler/job handler/mail sender method will be logged.
#
# Default value: `false`
#trace.handler=true|false

# `trace.request` turn on/off incoming request log
#
# When this configuration is turned on, every incoming request
# will be logged
#
# default value: `false`
#trace.request=true|false

# `upload.in_memory.threshold`
#
# If file upload content length is less than this configuration then
# the file will not get written into disk, instead it will get cached
# into a in memory byte array
#
# Default value: `1024 * 10`
#upload.in_memory.threshold

# `url.context` specifies the app global URL context.
#
# If this configuration is specified then all route configured will
# be attached to the configured context path.
#
# Default value: `null`
#url.context=

# `url.login` specifies the login URL which is used
# by {@link act.util.RedirectToLoginUrl}
# 
# Default value: `/login`
#url.login=

# `url.login.ajax` specifies the login URL which is used
# by {@link act.util.RedirectToLoginUrl} when request is AJAX
# 
# Default value: the value of `url.login` setting
#url.login.ajax

# `view.default` specifies the default view solution. If there
# are multiple views registered and default view are available, then
# it will be used at priority to load the templates
#
# Default value: `rythm`
#view.default=
