---
version: v1.0
name: Benchmarking suite
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
execution_time_limit:
  hours: 24
blocks:
  - name: setup
    dependencies: []
    task:
      jobs:
        - name: setup
          commands:
            - checkout
            - cache store $SEMAPHORE_GIT_SHA .
            - sudo apt-get update
            - sudo apt-get install build-essential libssl-dev git -y
            - git clone https://github.com/wg/wrk.git wrk
            - cd wrk && make
            - cache store wrk wrk
            - bundle config path .cache
            - bundle install
            - cache store built-in .cache
            - bundle exec rake config
  - name: python
    dependencies:
      - setup
    run:
      when: "change_in(['/python/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: aiohttp
    dependencies:
      - python
    task:
      env_vars:
        - name: LANGUAGE
          value: python
        - name: FRAMEWORK
          value: aiohttp
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: built-in
          commands:
            - make  -f python/aiohttp/.Makefile build.built-in
            - bundle exec rspec .spec
            - make  -f python/aiohttp/.Makefile collect.built-in
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: built-in
        - name: gunicorn
          commands:
            - make  -f python/aiohttp/.Makefile build.gunicorn
            - bundle exec rspec .spec
            - make  -f python/aiohttp/.Makefile collect.gunicorn
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: gunicorn
        - name: uvloop
          commands:
            - make  -f python/aiohttp/.Makefile build.uvloop
            - bundle exec rspec .spec
            - make  -f python/aiohttp/.Makefile collect.uvloop
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: uvloop
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: apidaora
    dependencies:
      - python
    task:
      env_vars:
        - name: LANGUAGE
          value: python
        - name: FRAMEWORK
          value: apidaora
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: uvicorn
          commands:
            - make  -f python/apidaora/.Makefile build.uvicorn
            - bundle exec rspec .spec
            - make  -f python/apidaora/.Makefile collect.uvicorn
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: uvicorn
        - name: hypercorn
          commands:
            - make  -f python/apidaora/.Makefile build.hypercorn
            - bundle exec rspec .spec
            - make  -f python/apidaora/.Makefile collect.hypercorn
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: hypercorn
        - name: daphne
          commands:
            - make  -f python/apidaora/.Makefile build.daphne
            - bundle exec rspec .spec
            - make  -f python/apidaora/.Makefile collect.daphne
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: daphne
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: blacksheep
    dependencies:
      - python
    task:
      env_vars:
        - name: LANGUAGE
          value: python
        - name: FRAMEWORK
          value: blacksheep
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: uvicorn
          commands:
            - make  -f python/blacksheep/.Makefile build.uvicorn
            - bundle exec rspec .spec
            - make  -f python/blacksheep/.Makefile collect.uvicorn
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: uvicorn
        - name: hypercorn
          commands:
            - make  -f python/blacksheep/.Makefile build.hypercorn
            - bundle exec rspec .spec
            - make  -f python/blacksheep/.Makefile collect.hypercorn
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: hypercorn
        - name: daphne
          commands:
            - make  -f python/blacksheep/.Makefile build.daphne
            - bundle exec rspec .spec
            - make  -f python/blacksheep/.Makefile collect.daphne
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: daphne
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: asgineer
    dependencies:
      - python
    task:
      env_vars:
        - name: LANGUAGE
          value: python
        - name: FRAMEWORK
          value: asgineer
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: uvicorn
          commands:
            - make  -f python/asgineer/.Makefile build.uvicorn
            - bundle exec rspec .spec
            - make  -f python/asgineer/.Makefile collect.uvicorn
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: uvicorn
        - name: hypercorn
          commands:
            - make  -f python/asgineer/.Makefile build.hypercorn
            - bundle exec rspec .spec
            - make  -f python/asgineer/.Makefile collect.hypercorn
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: hypercorn
        - name: daphne
          commands:
            - make  -f python/asgineer/.Makefile build.daphne
            - bundle exec rspec .spec
            - make  -f python/asgineer/.Makefile collect.daphne
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: daphne
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
