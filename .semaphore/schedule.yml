---
version: v1.0
name: Benchmarking suite
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
execution_time_limit:
  hours: 24
blocks:
  - name: setup
    dependencies: []
    task:
      jobs:
        - name: setup
          commands:
            - checkout
            - cache store $SEMAPHORE_GIT_SHA .
            - sudo apt-get update
            - sudo apt-get install build-essential libssl-dev git -y
            - git clone https://github.com/wg/wrk.git wrk
            - cd wrk && make
            - cache store wrk wrk
            - bundle config path .cache
            - bundle install
            - cache store built-in .cache
            - bundle exec rake config
  - name: pony
    dependencies:
      - setup
    run:
      when: "change_in(['/pony/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: go
    dependencies:
      - setup
    run:
      when: "change_in(['/go/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: nim
    dependencies:
      - setup
    run:
      when: "change_in(['/nim/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: python
    dependencies:
      - setup
    run:
      when: "change_in(['/python/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: aiohttp
    dependencies:
      - python
    task:
      env_vars:
        - name: LANGUAGE
          value: python
        - name: FRAMEWORK
          value: aiohttp
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: built-in
          commands:
            - make  -f python/aiohttp/.Makefile build.built-in
            - bundle exec rspec .spec
            - make  -f python/aiohttp/.Makefile collect.built-in
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: built-in
        - name: gunicorn
          commands:
            - make  -f python/aiohttp/.Makefile build.gunicorn
            - bundle exec rspec .spec
            - make  -f python/aiohttp/.Makefile collect.gunicorn
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: gunicorn
        - name: uvloop
          commands:
            - make  -f python/aiohttp/.Makefile build.uvloop
            - bundle exec rspec .spec
            - make  -f python/aiohttp/.Makefile collect.uvloop
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: uvloop
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: apidaora
    dependencies:
      - python
    task:
      env_vars:
        - name: LANGUAGE
          value: python
        - name: FRAMEWORK
          value: apidaora
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: uvicorn
          commands:
            - make  -f python/apidaora/.Makefile build.uvicorn
            - bundle exec rspec .spec
            - make  -f python/apidaora/.Makefile collect.uvicorn
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: uvicorn
        - name: hypercorn
          commands:
            - make  -f python/apidaora/.Makefile build.hypercorn
            - bundle exec rspec .spec
            - make  -f python/apidaora/.Makefile collect.hypercorn
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: hypercorn
        - name: daphne
          commands:
            - make  -f python/apidaora/.Makefile build.daphne
            - bundle exec rspec .spec
            - make  -f python/apidaora/.Makefile collect.daphne
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: daphne
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: asgineer
    dependencies:
      - python
    task:
      env_vars:
        - name: LANGUAGE
          value: python
        - name: FRAMEWORK
          value: asgineer
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: uvicorn
          commands:
            - make  -f python/asgineer/.Makefile build.uvicorn
            - bundle exec rspec .spec
            - make  -f python/asgineer/.Makefile collect.uvicorn
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: uvicorn
        - name: hypercorn
          commands:
            - make  -f python/asgineer/.Makefile build.hypercorn
            - bundle exec rspec .spec
            - make  -f python/asgineer/.Makefile collect.hypercorn
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: hypercorn
        - name: daphne
          commands:
            - make  -f python/asgineer/.Makefile build.daphne
            - bundle exec rspec .spec
            - make  -f python/asgineer/.Makefile collect.daphne
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: daphne
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: clojure
    dependencies:
      - setup
    run:
      when: "change_in(['/clojure/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: elixir
    dependencies:
      - setup
    run:
      when: "change_in(['/elixir/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: dart
    dependencies:
      - setup
    run:
      when: "change_in(['/dart/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: perl
    dependencies:
      - setup
    run:
      when: "change_in(['/perl/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: rust
    dependencies:
      - setup
    run:
      when: "change_in(['/rust/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: fsharp
    dependencies:
      - setup
    run:
      when: "change_in(['/fsharp/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: r
    dependencies:
      - setup
    run:
      when: "change_in(['/r/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: java
    dependencies:
      - setup
    run:
      when: "change_in(['/java/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: kotlin
    dependencies:
      - setup
    run:
      when: "change_in(['/kotlin/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: crystal
    dependencies:
      - setup
    run:
      when: "change_in(['/crystal/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: haskell
    dependencies:
      - setup
    run:
      when: "change_in(['/haskell/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: php
    dependencies:
      - setup
    run:
      when: "change_in(['/php/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: cubex
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: cubex
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: workerman
          commands:
            - make  -f php/cubex/.Makefile build.workerman
            - bundle exec rspec .spec
            - make  -f php/cubex/.Makefile collect.workerman
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: workerman
        - name: php-fpm
          commands:
            - make  -f php/cubex/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/cubex/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: swoole
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: swoole
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: swoole
          commands:
            - make  -f php/swoole/.Makefile build.swoole
            - bundle exec rspec .spec
            - make  -f php/swoole/.Makefile collect.swoole
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: swoole
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: swoft
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: swoft
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: swoole
          commands:
            - make  -f php/swoft/.Makefile build.swoole
            - bundle exec rspec .spec
            - make  -f php/swoft/.Makefile collect.swoole
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: swoole
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: simps
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: simps
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: swoole
          commands:
            - make  -f php/simps/.Makefile build.swoole
            - bundle exec rspec .spec
            - make  -f php/simps/.Makefile collect.swoole
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: swoole
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: nano
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: nano
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: workerman
          commands:
            - make  -f php/nano/.Makefile build.workerman
            - bundle exec rspec .spec
            - make  -f php/nano/.Makefile collect.workerman
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: workerman
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: codeigniter4
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: codeigniter4
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/codeigniter4/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/codeigniter4/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: yii
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: yii
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/yii/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/yii/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
        - name: swoole
          commands:
            - make  -f php/yii/.Makefile build.swoole
            - bundle exec rspec .spec
            - make  -f php/yii/.Makefile collect.swoole
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: swoole
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: phalcon
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: phalcon
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/phalcon/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/phalcon/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: ice
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: ice
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/ice/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/ice/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: spiral
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: spiral
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: road-runner
          commands:
            - make  -f php/spiral/.Makefile build.road-runner
            - bundle exec rspec .spec
            - make  -f php/spiral/.Makefile collect.road-runner
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: road-runner
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: mark
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: mark
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: workerman
          commands:
            - make  -f php/mark/.Makefile build.workerman
            - bundle exec rspec .spec
            - make  -f php/mark/.Makefile collect.workerman
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: workerman
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: workerman
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: workerman
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: workerman
          commands:
            - make  -f php/workerman/.Makefile build.workerman
            - bundle exec rspec .spec
            - make  -f php/workerman/.Makefile collect.workerman
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: workerman
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: nette
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: nette
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/nette/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/nette/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: webman
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: webman
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: workerman
          commands:
            - make  -f php/webman/.Makefile build.workerman
            - bundle exec rspec .spec
            - make  -f php/webman/.Makefile collect.workerman
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: workerman
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: driftphp
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: driftphp
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: reactphp
          commands:
            - make  -f php/driftphp/.Makefile build.reactphp
            - bundle exec rspec .spec
            - make  -f php/driftphp/.Makefile collect.reactphp
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: reactphp
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: sw-fw-less
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: sw-fw-less
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: swoole
          commands:
            - make  -f php/sw-fw-less/.Makefile build.swoole
            - bundle exec rspec .spec
            - make  -f php/sw-fw-less/.Makefile collect.swoole
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: swoole
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: laminas
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: laminas
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/laminas/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/laminas/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: chubbyphp
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: chubbyphp
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/chubbyphp/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/chubbyphp/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
        - name: swoole
          commands:
            - make  -f php/chubbyphp/.Makefile build.swoole
            - bundle exec rspec .spec
            - make  -f php/chubbyphp/.Makefile collect.swoole
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: swoole
        - name: workerman
          commands:
            - make  -f php/chubbyphp/.Makefile build.workerman
            - bundle exec rspec .spec
            - make  -f php/chubbyphp/.Makefile collect.workerman
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: workerman
        - name: road-runner
          commands:
            - make  -f php/chubbyphp/.Makefile build.road-runner
            - bundle exec rspec .spec
            - make  -f php/chubbyphp/.Makefile collect.road-runner
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: road-runner
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: imi
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: imi
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: swoole
          commands:
            - make  -f php/imi/.Makefile build.swoole
            - bundle exec rspec .spec
            - make  -f php/imi/.Makefile collect.swoole
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: swoole
        - name: workerman
          commands:
            - make  -f php/imi/.Makefile build.workerman
            - bundle exec rspec .spec
            - make  -f php/imi/.Makefile collect.workerman
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: workerman
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: unic
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: unic
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/unic/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/unic/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: basicphp
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: basicphp
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/basicphp/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/basicphp/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: comet
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: comet
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: workerman
          commands:
            - make  -f php/comet/.Makefile build.workerman
            - bundle exec rspec .spec
            - make  -f php/comet/.Makefile collect.workerman
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: workerman
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: sunrise-router
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: sunrise-router
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/sunrise-router/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/sunrise-router/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
        - name: road-runner
          commands:
            - make  -f php/sunrise-router/.Makefile build.road-runner
            - bundle exec rspec .spec
            - make  -f php/sunrise-router/.Makefile collect.road-runner
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: road-runner
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: ubiquity
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: ubiquity
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/ubiquity/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/ubiquity/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: one
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: one
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/one/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/one/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
        - name: swoole
          commands:
            - make  -f php/one/.Makefile build.swoole
            - bundle exec rspec .spec
            - make  -f php/one/.Makefile collect.swoole
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: swoole
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: mezzio
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: mezzio
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/mezzio/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/mezzio/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: lumen
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: lumen
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/lumen/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/lumen/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
        - name: swoole
          commands:
            - make  -f php/lumen/.Makefile build.swoole
            - bundle exec rspec .spec
            - make  -f php/lumen/.Makefile collect.swoole
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: swoole
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: antidot
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: antidot
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: reactphp
          commands:
            - make  -f php/antidot/.Makefile build.reactphp
            - bundle exec rspec .spec
            - make  -f php/antidot/.Makefile collect.reactphp
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: reactphp
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: siler
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: siler
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/siler/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/siler/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
        - name: swoole
          commands:
            - make  -f php/siler/.Makefile build.swoole
            - bundle exec rspec .spec
            - make  -f php/siler/.Makefile collect.swoole
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: swoole
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: fastsitephp
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: fastsitephp
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/fastsitephp/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/fastsitephp/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: bearframework
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: bearframework
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/bearframework/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/bearframework/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: hamlet
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: hamlet
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/hamlet/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/hamlet/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: swoole-coroutine
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: swoole-coroutine
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: swoole
          commands:
            - make  -f php/swoole-coroutine/.Makefile build.swoole
            - bundle exec rspec .spec
            - make  -f php/swoole-coroutine/.Makefile collect.swoole
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: swoole
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: symfony
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: symfony
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/symfony/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/symfony/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: slim
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: slim
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/slim/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/slim/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
        - name: swoole
          commands:
            - make  -f php/slim/.Makefile build.swoole
            - bundle exec rspec .spec
            - make  -f php/slim/.Makefile collect.swoole
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: swoole
        - name: road-runner
          commands:
            - make  -f php/slim/.Makefile build.road-runner
            - bundle exec rspec .spec
            - make  -f php/slim/.Makefile collect.road-runner
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: road-runner
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: sunrise-router-annotations
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: sunrise-router-annotations
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/sunrise-router-annotations/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/sunrise-router-annotations/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: fatfree
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: fatfree
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/fatfree/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/fatfree/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: laravel
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: laravel
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: php-fpm
          commands:
            - make  -f php/laravel/.Makefile build.php-fpm
            - bundle exec rspec .spec
            - make  -f php/laravel/.Makefile collect.php-fpm
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: php-fpm
        - name: swoole
          commands:
            - make  -f php/laravel/.Makefile build.swoole
            - bundle exec rspec .spec
            - make  -f php/laravel/.Makefile collect.swoole
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: swoole
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: hyperf
    dependencies:
      - php
    task:
      env_vars:
        - name: LANGUAGE
          value: php
        - name: FRAMEWORK
          value: hyperf
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: swoole
          commands:
            - make  -f php/hyperf/.Makefile build.swoole
            - bundle exec rspec .spec
            - make  -f php/hyperf/.Makefile collect.swoole
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: swoole
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: scala
    dependencies:
      - setup
    run:
      when: "change_in(['/scala/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: cpp
    dependencies:
      - setup
    run:
      when: "change_in(['/cpp/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: swift
    dependencies:
      - setup
    run:
      when: "change_in(['/swift/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: csharp
    dependencies:
      - setup
    run:
      when: "change_in(['/csharp/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: julia
    dependencies:
      - setup
    run:
      when: "change_in(['/julia/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: javascript
    dependencies:
      - setup
    run:
      when: "change_in(['/javascript/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: moleculer
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: moleculer
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: node
          commands:
            - make  -f javascript/moleculer/.Makefile build.node
            - bundle exec rspec .spec
            - make  -f javascript/moleculer/.Makefile collect.node
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: node
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: polka
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: polka
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: node
          commands:
            - make  -f javascript/polka/.Makefile build.node
            - bundle exec rspec .spec
            - make  -f javascript/polka/.Makefile collect.node
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: node
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: foxify
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: foxify
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: node
          commands:
            - make  -f javascript/foxify/.Makefile build.node
            - bundle exec rspec .spec
            - make  -f javascript/foxify/.Makefile collect.node
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: node
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: 0http
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: 0http
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: node
          commands:
            - make  -f javascript/0http/.Makefile build.node
            - bundle exec rspec .spec
            - make  -f javascript/0http/.Makefile collect.node
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: node
        - name: uwebsockets
          commands:
            - make  -f javascript/0http/.Makefile build.uwebsockets
            - bundle exec rspec .spec
            - make  -f javascript/0http/.Makefile collect.uwebsockets
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: uwebsockets
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: sifrr
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: sifrr
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: uwebsockets
          commands:
            - make  -f javascript/sifrr/.Makefile build.uwebsockets
            - bundle exec rspec .spec
            - make  -f javascript/sifrr/.Makefile collect.uwebsockets
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: uwebsockets
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: nestjs-fastify
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: nestjs-fastify
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: node
          commands:
            - make  -f javascript/nestjs-fastify/.Makefile build.node
            - bundle exec rspec .spec
            - make  -f javascript/nestjs-fastify/.Makefile collect.node
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: node
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: restana
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: restana
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: node
          commands:
            - make  -f javascript/restana/.Makefile build.node
            - bundle exec rspec .spec
            - make  -f javascript/restana/.Makefile collect.node
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: node
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: express
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: express
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: node
          commands:
            - make  -f javascript/express/.Makefile build.node
            - bundle exec rspec .spec
            - make  -f javascript/express/.Makefile collect.node
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: node
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: hapi
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: hapi
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: node
          commands:
            - make  -f javascript/hapi/.Makefile build.node
            - bundle exec rspec .spec
            - make  -f javascript/hapi/.Makefile collect.node
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: node
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: muneem
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: muneem
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: node
          commands:
            - make  -f javascript/muneem/.Makefile build.node
            - bundle exec rspec .spec
            - make  -f javascript/muneem/.Makefile collect.node
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: node
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: nanoexpress
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: nanoexpress
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: uwebsockets
          commands:
            - make  -f javascript/nanoexpress/.Makefile build.uwebsockets
            - bundle exec rspec .spec
            - make  -f javascript/nanoexpress/.Makefile collect.uwebsockets
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: uwebsockets
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: fyrejet
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: fyrejet
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: node
          commands:
            - make  -f javascript/fyrejet/.Makefile build.node
            - bundle exec rspec .spec
            - make  -f javascript/fyrejet/.Makefile collect.node
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: node
        - name: uwebsockets
          commands:
            - make  -f javascript/fyrejet/.Makefile build.uwebsockets
            - bundle exec rspec .spec
            - make  -f javascript/fyrejet/.Makefile collect.uwebsockets
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: uwebsockets
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: feathersjs
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: feathersjs
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: node
          commands:
            - make  -f javascript/feathersjs/.Makefile build.node
            - bundle exec rspec .spec
            - make  -f javascript/feathersjs/.Makefile collect.node
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: node
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: iotjs-express
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: iotjs-express
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: node
          commands:
            - make  -f javascript/iotjs-express/.Makefile build.node
            - bundle exec rspec .spec
            - make  -f javascript/iotjs-express/.Makefile collect.node
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: node
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: nestjs-express
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: nestjs-express
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: node
          commands:
            - make  -f javascript/nestjs-express/.Makefile build.node
            - bundle exec rspec .spec
            - make  -f javascript/nestjs-express/.Makefile collect.node
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: node
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: restify
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: restify
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: node
          commands:
            - make  -f javascript/restify/.Makefile build.node
            - bundle exec rspec .spec
            - make  -f javascript/restify/.Makefile collect.node
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: node
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: polkadot
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: polkadot
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: node
          commands:
            - make  -f javascript/polkadot/.Makefile build.node
            - bundle exec rspec .spec
            - make  -f javascript/polkadot/.Makefile collect.node
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: node
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: rayo
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: rayo
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: node
          commands:
            - make  -f javascript/rayo/.Makefile build.node
            - bundle exec rspec .spec
            - make  -f javascript/rayo/.Makefile collect.node
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: node
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: naturaljs-router
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: naturaljs-router
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: uwebsockets
          commands:
            - make  -f javascript/naturaljs-router/.Makefile build.uwebsockets
            - bundle exec rspec .spec
            - make  -f javascript/naturaljs-router/.Makefile collect.uwebsockets
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: uwebsockets
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: tinyhttp
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: tinyhttp
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: node
          commands:
            - make  -f javascript/tinyhttp/.Makefile build.node
            - bundle exec rspec .spec
            - make  -f javascript/tinyhttp/.Makefile collect.node
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: node
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: sails
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: sails
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: node
          commands:
            - make  -f javascript/sails/.Makefile build.node
            - bundle exec rspec .spec
            - make  -f javascript/sails/.Makefile collect.node
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: node
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: fastify
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: fastify
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: node
          commands:
            - make  -f javascript/fastify/.Makefile build.node
            - bundle exec rspec .spec
            - make  -f javascript/fastify/.Makefile collect.node
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: node
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: koa
    dependencies:
      - javascript
    task:
      env_vars:
        - name: LANGUAGE
          value: javascript
        - name: FRAMEWORK
          value: koa
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: node
          commands:
            - make  -f javascript/koa/.Makefile build.node
            - bundle exec rspec .spec
            - make  -f javascript/koa/.Makefile collect.node
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: node
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: c
    dependencies:
      - setup
    run:
      when: "change_in(['/c/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: ruby
    dependencies:
      - setup
    run:
      when: "change_in(['/ruby/','/data.json'],{pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: setup
          commands:
            - checkout
  - name: syro
    dependencies:
      - ruby
    task:
      env_vars:
        - name: LANGUAGE
          value: ruby
        - name: FRAMEWORK
          value: syro
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: puma
          commands:
            - make  -f ruby/syro/.Makefile build.puma
            - bundle exec rspec .spec
            - make  -f ruby/syro/.Makefile collect.puma
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: puma
        - name: iodine
          commands:
            - make  -f ruby/syro/.Makefile build.iodine
            - bundle exec rspec .spec
            - make  -f ruby/syro/.Makefile collect.iodine
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: iodine
        - name: falcon
          commands:
            - make  -f ruby/syro/.Makefile build.falcon
            - bundle exec rspec .spec
            - make  -f ruby/syro/.Makefile collect.falcon
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: falcon
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: sinatra
    dependencies:
      - ruby
    task:
      env_vars:
        - name: LANGUAGE
          value: ruby
        - name: FRAMEWORK
          value: sinatra
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: puma
          commands:
            - make  -f ruby/sinatra/.Makefile build.puma
            - bundle exec rspec .spec
            - make  -f ruby/sinatra/.Makefile collect.puma
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: puma
        - name: iodine
          commands:
            - make  -f ruby/sinatra/.Makefile build.iodine
            - bundle exec rspec .spec
            - make  -f ruby/sinatra/.Makefile collect.iodine
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: iodine
        - name: falcon
          commands:
            - make  -f ruby/sinatra/.Makefile build.falcon
            - bundle exec rspec .spec
            - make  -f ruby/sinatra/.Makefile collect.falcon
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: falcon
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: rack_app
    dependencies:
      - ruby
    task:
      env_vars:
        - name: LANGUAGE
          value: ruby
        - name: FRAMEWORK
          value: rack_app
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: puma
          commands:
            - make  -f ruby/rack_app/.Makefile build.puma
            - bundle exec rspec .spec
            - make  -f ruby/rack_app/.Makefile collect.puma
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: puma
        - name: iodine
          commands:
            - make  -f ruby/rack_app/.Makefile build.iodine
            - bundle exec rspec .spec
            - make  -f ruby/rack_app/.Makefile collect.iodine
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: iodine
        - name: falcon
          commands:
            - make  -f ruby/rack_app/.Makefile build.falcon
            - bundle exec rspec .spec
            - make  -f ruby/rack_app/.Makefile collect.falcon
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: falcon
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: camping
    dependencies:
      - ruby
    task:
      env_vars:
        - name: LANGUAGE
          value: ruby
        - name: FRAMEWORK
          value: camping
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: puma
          commands:
            - make  -f ruby/camping/.Makefile build.puma
            - bundle exec rspec .spec
            - make  -f ruby/camping/.Makefile collect.puma
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: puma
        - name: iodine
          commands:
            - make  -f ruby/camping/.Makefile build.iodine
            - bundle exec rspec .spec
            - make  -f ruby/camping/.Makefile collect.iodine
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: iodine
        - name: falcon
          commands:
            - make  -f ruby/camping/.Makefile build.falcon
            - bundle exec rspec .spec
            - make  -f ruby/camping/.Makefile collect.falcon
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: falcon
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: roda
    dependencies:
      - ruby
    task:
      env_vars:
        - name: LANGUAGE
          value: ruby
        - name: FRAMEWORK
          value: roda
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: puma
          commands:
            - make  -f ruby/roda/.Makefile build.puma
            - bundle exec rspec .spec
            - make  -f ruby/roda/.Makefile collect.puma
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: puma
        - name: iodine
          commands:
            - make  -f ruby/roda/.Makefile build.iodine
            - bundle exec rspec .spec
            - make  -f ruby/roda/.Makefile collect.iodine
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: iodine
        - name: falcon
          commands:
            - make  -f ruby/roda/.Makefile build.falcon
            - bundle exec rspec .spec
            - make  -f ruby/roda/.Makefile collect.falcon
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: falcon
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: agoo
    dependencies:
      - ruby
    task:
      env_vars:
        - name: LANGUAGE
          value: ruby
        - name: FRAMEWORK
          value: agoo
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: agoo
          commands:
            - make  -f ruby/agoo/.Makefile build.agoo
            - bundle exec rspec .spec
            - make  -f ruby/agoo/.Makefile collect.agoo
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: agoo
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: rack-routing
    dependencies:
      - ruby
    task:
      env_vars:
        - name: LANGUAGE
          value: ruby
        - name: FRAMEWORK
          value: rack-routing
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: puma
          commands:
            - make  -f ruby/rack-routing/.Makefile build.puma
            - bundle exec rspec .spec
            - make  -f ruby/rack-routing/.Makefile collect.puma
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: puma
        - name: iodine
          commands:
            - make  -f ruby/rack-routing/.Makefile build.iodine
            - bundle exec rspec .spec
            - make  -f ruby/rack-routing/.Makefile collect.iodine
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: iodine
        - name: falcon
          commands:
            - make  -f ruby/rack-routing/.Makefile build.falcon
            - bundle exec rspec .spec
            - make  -f ruby/rack-routing/.Makefile collect.falcon
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: falcon
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: hanami-api
    dependencies:
      - ruby
    task:
      env_vars:
        - name: LANGUAGE
          value: ruby
        - name: FRAMEWORK
          value: hanami-api
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: puma
          commands:
            - make  -f ruby/hanami-api/.Makefile build.puma
            - bundle exec rspec .spec
            - make  -f ruby/hanami-api/.Makefile collect.puma
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: puma
        - name: iodine
          commands:
            - make  -f ruby/hanami-api/.Makefile build.iodine
            - bundle exec rspec .spec
            - make  -f ruby/hanami-api/.Makefile collect.iodine
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: iodine
        - name: falcon
          commands:
            - make  -f ruby/hanami-api/.Makefile build.falcon
            - bundle exec rspec .spec
            - make  -f ruby/hanami-api/.Makefile collect.falcon
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: falcon
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: grape
    dependencies:
      - ruby
    task:
      env_vars:
        - name: LANGUAGE
          value: ruby
        - name: FRAMEWORK
          value: grape
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: puma
          commands:
            - make  -f ruby/grape/.Makefile build.puma
            - bundle exec rspec .spec
            - make  -f ruby/grape/.Makefile collect.puma
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: puma
        - name: iodine
          commands:
            - make  -f ruby/grape/.Makefile build.iodine
            - bundle exec rspec .spec
            - make  -f ruby/grape/.Makefile collect.iodine
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: iodine
        - name: falcon
          commands:
            - make  -f ruby/grape/.Makefile build.falcon
            - bundle exec rspec .spec
            - make  -f ruby/grape/.Makefile collect.falcon
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: falcon
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: cuba
    dependencies:
      - ruby
    task:
      env_vars:
        - name: LANGUAGE
          value: ruby
        - name: FRAMEWORK
          value: cuba
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: puma
          commands:
            - make  -f ruby/cuba/.Makefile build.puma
            - bundle exec rspec .spec
            - make  -f ruby/cuba/.Makefile collect.puma
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: puma
        - name: iodine
          commands:
            - make  -f ruby/cuba/.Makefile build.iodine
            - bundle exec rspec .spec
            - make  -f ruby/cuba/.Makefile collect.iodine
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: iodine
        - name: falcon
          commands:
            - make  -f ruby/cuba/.Makefile build.falcon
            - bundle exec rspec .spec
            - make  -f ruby/cuba/.Makefile collect.falcon
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: falcon
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
  - name: rails
    dependencies:
      - ruby
    task:
      env_vars:
        - name: LANGUAGE
          value: ruby
        - name: FRAMEWORK
          value: rails
      prologue:
        commands:
          - cache restore $SEMAPHORE_GIT_SHA
          - cache restore wrk
          - sudo install wrk /usr/local/bin
          - cache restore bin
          - cache restore built-in
          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 benchmark
          - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
          - bundle config path .cache
          - bundle install
          - bundle exec rake config
      jobs:
        - name: puma
          commands:
            - make  -f ruby/rails/.Makefile build.puma
            - bundle exec rspec .spec
            - make  -f ruby/rails/.Makefile collect.puma
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: puma
        - name: iodine
          commands:
            - make  -f ruby/rails/.Makefile build.iodine
            - bundle exec rspec .spec
            - make  -f ruby/rails/.Makefile collect.iodine
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: iodine
        - name: falcon
          commands:
            - make  -f ruby/rails/.Makefile build.falcon
            - bundle exec rspec .spec
            - make  -f ruby/rails/.Makefile collect.falcon
            - bundle exec rake db:raw_export
          env_vars:
            - name: ENGINE
              value: falcon
      epilogue:
        commands:
          - docker logs `cat ${FRAMEWORK}/cid.txt`
