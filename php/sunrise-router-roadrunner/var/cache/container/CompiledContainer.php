<?php
/**
 * This class has been auto-generated by PHP-DI.
 */
class CompiledContainer extends DI\CompiledContainer{
    const METHOD_MAPPING = array (
  'Psr\\Cache\\CacheItemPoolInterface' => 'get1',
  'router.descriptor_loader.resources' => 'get2',
  'subEntry1' => 'get3',
  'Psr\\SimpleCache\\CacheInterface' => 'get4',
  'subEntry2' => 'get5',
  'app.root' => 'get6',
  'app.env' => 'get7',
  'app.name' => 'get8',
  'app.version' => 'get9',
  'app.commands' => 'get10',
  'subEntry3' => 'get11',
  'subEntry4' => 'get12',
  'subEntry5' => 'get13',
  'subEntry6' => 'get14',
  'subEntry7' => 'get15',
  'router.descriptor_loader.cache' => 'get16',
  'router.loaders' => 'get17',
  'subEntry8' => 'get18',
  'Sunrise\\Http\\Router\\Loader\\DescriptorLoaderInterface' => 'get19',
  'subEntry9' => 'get20',
  'subEntry10' => 'get21',
  'router.parameter_resolvers' => 'get22',
  'router.response_resolvers' => 'get23',
  'router.middlewares' => 'get24',
  'router.route_middlewares' => 'get25',
  'router.event_dispatcher' => 'get26',
  'router.default_media_type' => 'get27',
  'Sunrise\\Http\\Router\\ParameterResolverChainInterface' => 'get28',
  'subEntry11' => 'get29',
  'Sunrise\\Http\\Router\\ResponseResolverChainInterface' => 'get30',
  'subEntry12' => 'get31',
  'Sunrise\\Http\\Router\\ClassResolverInterface' => 'get32',
  'subEntry13' => 'get33',
  'subEntry14' => 'get34',
  'Sunrise\\Http\\Router\\MiddlewareResolverInterface' => 'get35',
  'subEntry15' => 'get36',
  'subEntry16' => 'get37',
  'subEntry17' => 'get38',
  'Sunrise\\Http\\Router\\RequestHandlerResolverInterface' => 'get39',
  'subEntry18' => 'get40',
  'subEntry19' => 'get41',
  'subEntry20' => 'get42',
  'Sunrise\\Http\\Router\\ReferenceResolverInterface' => 'get43',
  'subEntry21' => 'get44',
  'subEntry22' => 'get45',
  'Sunrise\\Http\\Router\\RouterInterface' => 'get46',
  'subEntry23' => 'get47',
  'subEntry24' => 'get48',
  'subEntry25' => 'get49',
  'subEntry26' => 'get50',
  'subEntry27' => 'get51',
  'Sunrise\\Http\\Router\\RequestHandlerReflectorInterface' => 'get52',
  'Psr\\Http\\Message\\RequestFactoryInterface' => 'get53',
  'Psr\\Http\\Message\\ResponseFactoryInterface' => 'get54',
  'Psr\\Http\\Message\\ServerRequestFactoryInterface' => 'get55',
  'Psr\\Http\\Message\\StreamFactoryInterface' => 'get56',
  'Psr\\Http\\Message\\UploadedFileFactoryInterface' => 'get57',
  'Psr\\Http\\Message\\UriFactoryInterface' => 'get58',
);

    protected function get1()
    {
        $object = new Symfony\Component\Cache\Adapter\ArrayAdapter(0, true, 0.0, 0);
        return $object;
    }

    protected function get3()
    {
        return \DI\Definition\StringDefinition::resolveExpression('<nested definition>', '{app.root}/src/Controller', $this->delegateContainer);
    }

    protected function get2()
    {
        return [
            0 => $this->get3(),
        ];
    }

    protected function get5()
    {
        return $this->delegateContainer->get('Psr\\Cache\\CacheItemPoolInterface');
    }

    protected function get4()
    {
        $object = new Symfony\Component\Cache\Psr16Cache($this->get5());
        return $object;
    }

    protected function get6()
    {
        return '/Users/fenric/projects/web-frameworks/php/sunrise-router-roadrunner';
    }

    protected function get7()
    {
                $value = $_ENV['APP_ENV'] ?? $_SERVER['APP_ENV'] ?? getenv('APP_ENV');
        if (false !== $value) return $value;
        if (!false) {
            throw new \DI\Definition\Exception\InvalidDefinition("The environment variable 'APP_ENV' has not been defined");
        }
        return NULL;
    }

    protected function get8()
    {
                $value = $_ENV['APP_NAME'] ?? $_SERVER['APP_NAME'] ?? getenv('APP_NAME');
        if (false !== $value) return $value;
        if (!false) {
            throw new \DI\Definition\Exception\InvalidDefinition("The environment variable 'APP_NAME' has not been defined");
        }
        return NULL;
    }

    protected function get9()
    {
                $value = $_ENV['APP_VERSION'] ?? $_SERVER['APP_VERSION'] ?? getenv('APP_VERSION');
        if (false !== $value) return $value;
        if (!false) {
            throw new \DI\Definition\Exception\InvalidDefinition("The environment variable 'APP_VERSION' has not been defined");
        }
        return NULL;
    }

    protected function get12()
    {
        return $this->delegateContainer->get('Sunrise\\Http\\Router\\RouterInterface');
    }

    protected function get13()
    {
        return $this->delegateContainer->get('Psr\\Http\\Message\\ServerRequestFactoryInterface');
    }

    protected function get14()
    {
        return $this->delegateContainer->get('Psr\\Http\\Message\\StreamFactoryInterface');
    }

    protected function get15()
    {
        return $this->delegateContainer->get('Psr\\Http\\Message\\UploadedFileFactoryInterface');
    }

    protected function get11()
    {
        $object = new App\Command\RoadRunnerWorker($this->get12(), $this->get13(), $this->get14(), $this->get15());
        return $object;
    }

    protected function get10()
    {
        return [
            0 => $this->get11(),
        ];
    }

    protected function get16()
    {
        return $this->delegateContainer->get('Psr\\SimpleCache\\CacheInterface');
    }

    protected function get18()
    {
        return $this->delegateContainer->get('Sunrise\\Http\\Router\\Loader\\DescriptorLoaderInterface');
    }

    protected function get17()
    {
        return [
            0 => $this->get18(),
        ];
    }

    protected function get20()
    {
        return $this->delegateContainer->get('router.descriptor_loader.resources');
    }

    protected function get21()
    {
        return $this->delegateContainer->get('router.descriptor_loader.cache');
    }

    protected function get19()
    {
        $object = new Sunrise\Http\Router\Loader\DescriptorLoader($this->get20(), $this->get21());
        return $object;
    }

    protected function get22()
    {
        return [
        ];
    }

    protected function get23()
    {
        return [
        ];
    }

    protected function get24()
    {
        return [
        ];
    }

    protected function get25()
    {
        return [
        ];
    }

    protected function get26()
    {
        return NULL;
    }

    protected function get27()
    {
        return \Sunrise\Http\Router\Dictionary\MediaType::JSON;
    }

    protected function get29()
    {
        return $this->delegateContainer->get('router.parameter_resolvers');
    }

    protected function get28()
    {
        $object = new Sunrise\Http\Router\ParameterResolverChain($this->get29());
        return $object;
    }

    protected function get31()
    {
        return $this->delegateContainer->get('router.response_resolvers');
    }

    protected function get30()
    {
        $object = new Sunrise\Http\Router\ResponseResolverChain($this->get31());
        return $object;
    }

    protected function get33()
    {
        return $this->delegateContainer->get('Sunrise\\Http\\Router\\ParameterResolverChainInterface');
    }

    protected function get34()
    {
        return $this->delegateContainer->get('Psr\\Container\\ContainerInterface');
    }

    protected function get32()
    {
        $object = new Sunrise\Http\Router\ClassResolver($this->get33(), $this->get34());
        return $object;
    }

    protected function get36()
    {
        return $this->delegateContainer->get('Sunrise\\Http\\Router\\ClassResolverInterface');
    }

    protected function get37()
    {
        return $this->delegateContainer->get('Sunrise\\Http\\Router\\ParameterResolverChainInterface');
    }

    protected function get38()
    {
        return $this->delegateContainer->get('Sunrise\\Http\\Router\\ResponseResolverChainInterface');
    }

    protected function get35()
    {
        $object = new Sunrise\Http\Router\MiddlewareResolver($this->get36(), $this->get37(), $this->get38());
        return $object;
    }

    protected function get40()
    {
        return $this->delegateContainer->get('Sunrise\\Http\\Router\\ClassResolverInterface');
    }

    protected function get41()
    {
        return $this->delegateContainer->get('Sunrise\\Http\\Router\\ParameterResolverChainInterface');
    }

    protected function get42()
    {
        return $this->delegateContainer->get('Sunrise\\Http\\Router\\ResponseResolverChainInterface');
    }

    protected function get39()
    {
        $object = new Sunrise\Http\Router\RequestHandlerResolver($this->get40(), $this->get41(), $this->get42());
        return $object;
    }

    protected function get44()
    {
        return $this->delegateContainer->get('Sunrise\\Http\\Router\\MiddlewareResolverInterface');
    }

    protected function get45()
    {
        return $this->delegateContainer->get('Sunrise\\Http\\Router\\RequestHandlerResolverInterface');
    }

    protected function get43()
    {
        $object = new Sunrise\Http\Router\ReferenceResolver($this->get44(), $this->get45());
        return $object;
    }

    protected function get47()
    {
        return $this->delegateContainer->get('Sunrise\\Http\\Router\\ReferenceResolverInterface');
    }

    protected function get48()
    {
        return $this->delegateContainer->get('router.loaders');
    }

    protected function get49()
    {
        return $this->delegateContainer->get('router.middlewares');
    }

    protected function get50()
    {
        return $this->delegateContainer->get('router.route_middlewares');
    }

    protected function get51()
    {
        return $this->delegateContainer->get('router.event_dispatcher');
    }

    protected function get46()
    {
        $object = new Sunrise\Http\Router\Router($this->get47(), $this->get48(), $this->get49(), $this->get50(), $this->get51());
        return $object;
    }

    protected function get52()
    {
        $object = new Sunrise\Http\Router\RequestHandlerReflector();
        return $object;
    }

    protected function get53()
    {
        $object = new Sunrise\Http\Message\RequestFactory();
        return $object;
    }

    protected function get54()
    {
        $object = new Sunrise\Http\Message\ResponseFactory();
        return $object;
    }

    protected function get55()
    {
        $object = new Sunrise\Http\Message\ServerRequestFactory();
        return $object;
    }

    protected function get56()
    {
        $object = new Sunrise\Http\Message\StreamFactory();
        return $object;
    }

    protected function get57()
    {
        $object = new Sunrise\Http\Message\UploadedFileFactory();
        return $object;
    }

    protected function get58()
    {
        $object = new Sunrise\Http\Message\UriFactory();
        return $object;
    }

}
